{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const navigate = useNavigate(); // useNavigate 훅을 사용\n\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n\n  // 상태값을 이용하여 사용자 정보 설정\n  const userData = {\n    username: id,\n    password: password,\n    confirmPassword: confirmPassword,\n    nickname: nickname\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // 비밀번호 확인\n    if (password !== confirmPassword) {\n      alert('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    // 서버와 통신해서 이미 있는 닉네임이면 alert 뜨는 코드\n    // 임시로 사용할 닉네임 목록\n    const existingNicknames = ['JohnDoe', 'JaneDoe', 'User123'];\n    // 임시 닉네임 중복 확인 로직\n    if (existingNicknames.includes(nickname)) {\n      alert('이미 존재하는 닉네임입니다.');\n      return;\n    }\n\n    // 실제로 쓸 통신 코드, fetch를 사용한 POST 요청\n    fetch('http://localhost:8000/registerpage/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // 여기에 실제 통신할 코드 쓰기 fetch 또는 async\n\n    // 이미 아이디가 중복되면 있으면 에러뜨게 만드는 코드\n\n    // 성공적으로 회원가입이 완료되었을 때\n    alert('회원가입이 완료되었습니다.');\n    navigate('/loginPage'); // 로그인 페이지로 이동  \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nickname,\n          onChange: e => setNickname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/loginPage\",\n        children: \"\\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uB85C\\uADF8\\uC778\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"JH0cy8+WjRCVNZX/AivdbeSYar8=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","id","setId","password","setPassword","confirmPassword","setConfirmPassword","nickname","setNickname","userData","username","handleSubmit","e","preventDefault","alert","existingNicknames","includes","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n    const navigate = useNavigate(); // useNavigate 훅을 사용\r\n\r\n  \r\n  \r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [nickname, setNickname] = useState('');\r\n\r\n    // 상태값을 이용하여 사용자 정보 설정\r\n    const userData = {\r\n        username: id,\r\n        password: password,\r\n        confirmPassword: confirmPassword,\r\n        nickname: nickname\r\n    };\r\n\r\n\r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // 비밀번호 확인\r\n        if (password !== confirmPassword) {\r\n            alert('비밀번호가 일치하지 않습니다.');\r\n            return;\r\n        }\r\n\r\n\r\n\r\n    // 서버와 통신해서 이미 있는 닉네임이면 alert 뜨는 코드\r\n    // 임시로 사용할 닉네임 목록\r\n    const existingNicknames = ['JohnDoe', 'JaneDoe', 'User123'];\r\n    // 임시 닉네임 중복 확인 로직\r\n    if (existingNicknames.includes(nickname)) {\r\n        alert('이미 존재하는 닉네임입니다.');\r\n        return;\r\n    }\r\n    \r\n    \r\n    // 실제로 쓸 통신 코드, fetch를 사용한 POST 요청\r\n    fetch('http://localhost:8000/registerpage/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log('Success:', data);\r\n    })\r\n    .catch((error) => {\r\n        console.error('Error:', error);\r\n    });\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n        // 여기에 실제 통신할 코드 쓰기 fetch 또는 async\r\n\r\n\r\n\r\n        // 이미 아이디가 중복되면 있으면 에러뜨게 만드는 코드\r\n\r\n\r\n\r\n        // 성공적으로 회원가입이 완료되었을 때\r\n        alert('회원가입이 완료되었습니다.');\r\n        navigate('/loginPage'); // 로그인 페이지로 이동  \r\n    };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>아이디:</label>\r\n          <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>닉네임:</label>\r\n          <input type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>비밀번호:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>비밀번호 확인:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">가입하기</button>\r\n      </form>\r\n      <p>이미 계정이 있으신가요? <Link to=\"/loginPage\">여기를 클릭하여 로그인하세요</Link>.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}