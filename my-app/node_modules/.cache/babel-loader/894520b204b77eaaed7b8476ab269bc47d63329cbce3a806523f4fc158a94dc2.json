{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\n  const post = {\n    1: {\n      title: '첫 번째 게시물',\n      content: '첫 번째 게시물 내용입니다.'\n    },\n    2: {\n      title: '두 번째 게시물',\n      content: '두 번째 게시물 내용입니다.'\n    },\n    3: {\n      title: '세 번째 게시물',\n      content: '세 번째 게시물 내용입니다.'\n    }\n  }[id];\n\n  // 댓글 관리를 위한 상태\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\n\n  //// ★★★★★ 이거 댓글 id 부여하면 안됨, 일단 지금은 이대로 쓰는데 꼭 바꿔야 됨, 서버에서 게시글 테이블안에 댓글 컬럼을 받아와서 나열할거임\n  // 댓글 추가 핸들러\n  const handleAddComment = () => {\n    if (comment.trim() !== '') {\n      const newComment = {\n        id: comments.length + 1,\n        // 새로운 댓글에 고유한 id 부여\n        content: comment\n      };\n      setComments([...comments, newComment]);\n      setComment('');\n    }\n  };\n\n  // 찾는 post가 없다면 찾을 수 없습니다. 404\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: editCommentId === c.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: c.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"C+LviHOy3/swRbVGxBtiIE6bapU=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","id","post","title","content","comment","setComment","comments","setComments","handleAddComment","trim","newComment","length","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","c","editCommentId","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n\r\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\r\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\r\n  const post = {\r\n    1: { title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n    2: { title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n    3: { title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' },\r\n  }[id];\r\n\r\n  \r\n  \r\n  // 댓글 관리를 위한 상태\r\n  const [comment, setComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  \r\n\r\n\r\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\r\n\r\n\r\n\r\n\r\n  //// ★★★★★ 이거 댓글 id 부여하면 안됨, 일단 지금은 이대로 쓰는데 꼭 바꿔야 됨, 서버에서 게시글 테이블안에 댓글 컬럼을 받아와서 나열할거임\r\n  // 댓글 추가 핸들러\r\n  const handleAddComment = () => {\r\n    if (comment.trim() !== '') {\r\n      const newComment = {\r\n        id: comments.length + 1, // 새로운 댓글에 고유한 id 부여\r\n        content: comment\r\n      };\r\n      setComments([...comments, newComment]);\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // 찾는 post가 없다면 찾을 수 없습니다. 404\r\n  if (!post) {\r\n    return <div>게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n\r\n      <div>\r\n        <h2>댓글</h2>\r\n        <textarea\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요\"\r\n        ></textarea>\r\n        <button onClick={handleAddComment}>댓글 추가</button>\r\n        <ul>\r\n          {comments.map((c) => (\r\n            <li key={c.id}>\r\n              {editCommentId === c.id ? (\r\n                <div>\r\n                  <textarea\r\n                  ></textarea>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {c.content}\r\n                  \r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;;EAE1B;EACA;EACA,MAAMM,IAAI,GAAG;IACX,CAAC,EAAE;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC;IACpD,CAAC,EAAE;MAAED,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC;IACpD,CAAC,EAAE;MAAED,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB;EACrD,CAAC,CAACH,EAAE,CAAC;;EAIL;EACA,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAI5C;;EAKA;EACA;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIJ,OAAO,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,UAAU,GAAG;QACjBV,EAAE,EAAEM,QAAQ,CAACK,MAAM,GAAG,CAAC;QAAE;QACzBR,OAAO,EAAEC;MACX,CAAC;MACDG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,UAAU,CAAC,CAAC;MACtCL,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;;EAID;EACA,IAAI,CAACJ,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAe,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAGA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAKX,IAAI,CAACC;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnB,OAAA;MAAAe,QAAA,EAAIX,IAAI,CAACE;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACXnB,OAAA;QACEoB,KAAK,EAAEb,OAAQ;QACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACZnB,OAAA;QAAQyB,OAAO,EAAEd,gBAAiB;QAAAI,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDnB,OAAA;QAAAe,QAAA,EACGN,QAAQ,CAACiB,GAAG,CAAEC,CAAC,iBACd3B,OAAA;UAAAe,QAAA,EACGa,aAAa,KAAKD,CAAC,CAACxB,EAAE,gBACrBH,OAAA;YAAAe,QAAA,eACEf,OAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACW;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,gBAENnB,OAAA;YAAAe,QAAA,EACGY,CAAC,CAACrB;UAAO;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEP;QACN,GAXMQ,CAAC,CAACxB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYT,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9EID,QAAQ;EAAA,QACGH,SAAS;AAAA;AAAA+B,EAAA,GADpB5B,QAAQ;AAgFd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}