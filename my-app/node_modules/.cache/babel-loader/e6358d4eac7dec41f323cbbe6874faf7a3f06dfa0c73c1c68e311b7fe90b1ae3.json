{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// 상단 게시판 카테고리 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'HOT게시판'];\nconst MainPage = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('전체');\n  const [posts, setPosts] = useState([]);\n\n  // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.    \n  useEffect(() => {\n    const examplePosts = [{\n      id: 1,\n      category: '자유게시판',\n      title: '첫 번째 게시물',\n      content: '첫 번째 게시물 내용입니다.'\n    }, {\n      id: 2,\n      category: '공감게시판',\n      title: '두 번째 게시물',\n      content: '두 번째 게시물 내용입니다.'\n    }, {\n      id: 3,\n      category: 'HOT게시판',\n      title: '세 번째 게시물',\n      content: '세 번째 게시물 내용입니다.'\n    }];\n    setPosts(examplePosts);\n  }, []);\n  const filteredPosts = selectedCategory === '전체' ? posts : posts.filter(post => post.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCategory(category),\n        style: {\n          margin: '0 10px'\n        },\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"D7HYVUTevrq3szEJIkXhW0620II=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","categories","MainPage","_s","selectedCategory","setSelectedCategory","posts","setPosts","examplePosts","id","category","title","content","filteredPosts","filter","post","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","map","onClick","margin","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\n// 상단 게시판 카테고리 \r\nconst categories = ['자유게시판', '공감게시판', 'HOT게시판'];\r\n\r\n\r\nconst MainPage = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState('전체');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\r\n    // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.    \r\n    useEffect(() => {\r\n        const examplePosts = [\r\n            { id: 1, category: '자유게시판', title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n            { id: 2, category: '공감게시판', title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n            { id: 3, category: 'HOT게시판', title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' },\r\n        ]; \r\n    setPosts(examplePosts);\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const filteredPosts = selectedCategory === '전체' \r\n    ? posts \r\n    : posts.filter(post => post.category === selectedCategory);\r\n\r\n  return (\r\n    <div>\r\n      <h1>메인 페이지</h1>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        {categories.map(category => (\r\n          <button \r\n            key={category} \r\n            onClick={() => setSelectedCategory(category)}\r\n            style={{ margin: '0 10px' }}\r\n          >\r\n            {category}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <ul>\r\n        {filteredPosts.map(post => (\r\n          <li key={post.id}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAGlD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;AAG/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMU,YAAY,GAAG,CACjB;MAAEC,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,OAAO;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,EAC3E;MAAEH,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,OAAO;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,EAC3E;MAAEH,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAC/E;IACLL,QAAQ,CAACC,YAAY,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAOR,MAAMK,aAAa,GAAGT,gBAAgB,KAAK,IAAI,GAC3CE,KAAK,GACLA,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,QAAQ,KAAKN,gBAAgB,CAAC;EAE5D,oBACEJ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,EAClCf,UAAU,CAACsB,GAAG,CAACb,QAAQ,iBACtBV,OAAA;QAEEwB,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACK,QAAQ,CAAE;QAC7CW,KAAK,EAAE;UAAEI,MAAM,EAAE;QAAS,CAAE;QAAAT,QAAA,EAE3BN;MAAQ,GAJJA,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EACGH,aAAa,CAACU,GAAG,CAACR,IAAI,iBACrBf,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAKD,IAAI,CAACJ;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAgB,QAAA,EAAID,IAAI,CAACH;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFdL,IAAI,CAACN,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhDID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}