{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/common/Header'; // Header 컴포넌트 import\nimport { useAuth } from '../components/Auth/AuthContext'; // useAuth 훅 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\nconst MainPage = () => {\n  _s();\n  const {\n    isLogin\n  } = useAuth();\n  const [selectedCategory, setSelectedCategory] = useState('자유게시판');\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let categoryEndpoint = '';\n        if (selectedCategory === '자유게시판') {\n          categoryEndpoint = 'jayuposts';\n        } else if (selectedCategory === '공감게시판') {\n          categoryEndpoint = 'gonggamposts';\n        } else if (selectedCategory === 'BEST게시판') {\n          categoryEndpoint = 'bestposts';\n        }\n        const response = await fetch(`http://localhost:8080/api/${categoryEndpoint}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        setPosts(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [selectedCategory]);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategoryChange(category),\n        style: {\n          margin: '0 10px',\n          fontWeight: selectedCategory === category ? 'bold' : 'normal'\n        },\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/PostWritePage\",\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${post.category.toLowerCase() === '자유게시판' ? 'jayuposts' : 'gonggamposts'}/${post.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"Y4iDIY8mrhMx0EuK26z9n9UsGiU=\", false, function () {\n  return [useAuth];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","Header","useAuth","jsxDEV","_jsxDEV","categories","MainPage","_s","isLogin","selectedCategory","setSelectedCategory","posts","setPosts","loading","setLoading","fetchPosts","categoryEndpoint","response","fetch","ok","Error","data","json","error","console","handleCategoryChange","category","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","map","onClick","margin","fontWeight","to","length","post","toLowerCase","id","title","content","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/common/Header'; // Header 컴포넌트 import\r\nimport { useAuth } from '../components/Auth/AuthContext'; // useAuth 훅 임포트\r\n\r\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\r\n\r\nconst MainPage = () => {\r\n    const { isLogin } = useAuth();\r\n    const [selectedCategory, setSelectedCategory] = useState('자유게시판');\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                let categoryEndpoint = '';\r\n                if (selectedCategory === '자유게시판') {\r\n                    categoryEndpoint = 'jayuposts';\r\n                } else if (selectedCategory === '공감게시판') {\r\n                    categoryEndpoint = 'gonggamposts';\r\n                } else if (selectedCategory === 'BEST게시판') {\r\n                    categoryEndpoint = 'bestposts';\r\n                }\r\n\r\n                const response = await fetch(`http://localhost:8080/api/${categoryEndpoint}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                setPosts(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [selectedCategory]);\r\n\r\n    const handleCategoryChange = (category) => {\r\n        setSelectedCategory(category);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <h1>메인 페이지</h1>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                {categories.map(category => (\r\n                    <button \r\n                        key={category} \r\n                        onClick={() => handleCategoryChange(category)} \r\n                        style={{ margin: '0 10px', fontWeight: selectedCategory === category ? 'bold' : 'normal' }}\r\n                    >\r\n                        {category}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {isLogin && <Link to=\"/PostWritePage\">글쓰기</Link>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : posts.length === 0 ? (\r\n                <p>No posts found for selected category</p>\r\n            ) : (\r\n                <ul>\r\n                {posts.map(post => (\r\n                    <li key={post.id}>\r\n                    <Link to={`/${post.category.toLowerCase() === '자유게시판' ? 'jayuposts' : 'gonggamposts'}/${post.id}`}>\r\n                        <h2>{post.title}</h2>\r\n                        <p>{post.content}</p>\r\n                    </Link>\r\n                    </li>\r\n                ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}