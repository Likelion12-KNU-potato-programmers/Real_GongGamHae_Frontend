{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header'; // Header 컴포넌트 import\n\n// 상단 게시판 카테고리 모음\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\nconst MainPage = () => {\n  _s();\n  // 처음 초기값 게시판을 자유게시판으로 만들기 위하 코드, 만약 '공감게시판'이면 새로고침할 때마다 공감게시판이 처음 보임\n  const [selectedCategory, setSelectedCategory] = useState('자유게시판');\n  const [filteredPosts, setFilteredPosts] = useState(null); // 선택된 카테고리에 맞는 게시글만 저장하는 상태\n\n  useEffect(() => {\n    // 예시로 fetch API를 사용한 GET 요청\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        console.log('Fetched posts:', data);\n        setFilteredPosts(data.reduce((acc, post) => {\n          // 카테고리를 기준으로 게시글을 필터링\n          const category = post[2]; // 카테고리는 데이터 배열의 세 번째 요소에 있음\n          if (category === selectedCategory) {\n            acc.push(post);\n          }\n          return acc;\n        }, []));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [selectedCategory]);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategoryChange(category) // 카테고리 변경 핸들러 추가\n        ,\n        style: {\n          margin: '0 10px',\n          fontWeight: selectedCategory === category ? 'bold' : 'normal'\n        },\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/PostWrite\",\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/LoginPage\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), filteredPosts === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : filteredPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, post[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"4ryNHJ4jKeFxLcDAgD3sKJq/X1I=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","Header","jsxDEV","_jsxDEV","categories","MainPage","_s","selectedCategory","setSelectedCategory","filteredPosts","setFilteredPosts","fetchPosts","response","fetch","ok","Error","data","json","console","log","reduce","acc","post","category","push","error","handleCategoryChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","map","onClick","margin","fontWeight","to","length","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header'; // Header 컴포넌트 import\r\n\r\n// 상단 게시판 카테고리 모음\r\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\r\n\r\nconst MainPage = () => {\r\n    \r\n    // 처음 초기값 게시판을 자유게시판으로 만들기 위하 코드, 만약 '공감게시판'이면 새로고침할 때마다 공감게시판이 처음 보임\r\n    const [selectedCategory, setSelectedCategory] = useState('자유게시판');\r\n    const [filteredPosts, setFilteredPosts] = useState(null); // 선택된 카테고리에 맞는 게시글만 저장하는 상태\r\n\r\n    useEffect(() => {\r\n       // 예시로 fetch API를 사용한 GET 요청\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                console.log('Fetched posts:', data);\r\n                setFilteredPosts(data.reduce((acc, post) => {\r\n                    // 카테고리를 기준으로 게시글을 필터링\r\n                    const category = post[2]; // 카테고리는 데이터 배열의 세 번째 요소에 있음\r\n                    if (category === selectedCategory) {\r\n                        acc.push(post);\r\n                    }\r\n                    return acc;\r\n                }, []));\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [selectedCategory]);\r\n\r\n    const handleCategoryChange = (category) => {\r\n        setSelectedCategory(category);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Header 컴포넌트 렌더링 */}\r\n            <Header />\r\n\r\n            <h1>메인 페이지</h1>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                {categories.map(category => (\r\n                    <button \r\n                        key={category} \r\n                        onClick={() => handleCategoryChange(category)} // 카테고리 변경 핸들러 추가\r\n                        style={{ margin: '0 10px', fontWeight: selectedCategory === category ? 'bold' : 'normal' }}\r\n                    >\r\n                        {category}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            <Link to=\"/PostWrite\">글쓰기</Link>\r\n            <Link to=\"/LoginPage\">로그인</Link>\r\n            \r\n\r\n            {filteredPosts === null ? (\r\n                <p>Loading...</p>\r\n            ) : filteredPosts.length === 0 ? (\r\n                <p>No posts found for selected category</p>\r\n            ) : (\r\n                <ul>\r\n                    {filteredPosts.map(post => (\r\n                        <li key={post[0]}>\r\n                            <h2>{post[1]}</h2>\r\n                            <p>{post[3]}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}