{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\BoardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParam, Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect = () => {\n    // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\n    // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\n    const examplePosts = [{\n      id: 1,\n      title: '첫 번째 게시물',\n      content: '첫 번째 게시물 내용입니다.'\n    }, {\n      id: 2,\n      title: '두 번째 게시물',\n      content: '두 번째 게시물 내용입니다.'\n    }, {\n      id: 3,\n      title: '세 번째 게시물',\n      content: '세 번째 게시물 내용입니다.'\n    }];\n    setPosts(examplePosts);\n  }, [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(BoardPage, \"cKU1zMd+6TaaskJ+eONQ/MmIRQw=\", false, function () {\n  return [useNavigate];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useEffect","useParam","Link","useNavigate","jsxDEV","_jsxDEV","BoardPage","_s","posts","setPosts","navigate","examplePosts","id","title","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","to","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/BoardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParam, Link, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst BoardPage = () => {\r\n    \r\n    const [posts, setPosts] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect = () => {\r\n        // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\r\n        // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\r\n        const examplePosts = [\r\n            { id: 1, title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n            { id: 2, title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n            { id: 3, title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' },\r\n        ];\r\n        setPosts(examplePosts);\r\n    }, [];\r\n    \r\n    return (\r\n        <div>\r\n          <h1>게시판 페이지</h1>\r\n          <ul>\r\n            {posts.map(post => (\r\n              <li key={post.id}>\r\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,GAAGA,CAAA,KAAM;IACd;IACA;IACA,MAAMW,YAAY,GAAG,CACjB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACxD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACxD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAC3D;IACDL,QAAQ,CAACE,YAAY,CAAC;EAC1B,CAAC,EAAE,EAAE;EAEL,oBACIN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBd,OAAA;MAAAU,QAAA,EACGP,KAAK,CAACY,GAAG,CAACC,IAAI,iBACbhB,OAAA;QAAAU,QAAA,eACEV,OAAA,CAACH,IAAI;UAACoB,EAAE,EAAG,UAASD,IAAI,CAACT,EAAG,EAAE;UAAAG,QAAA,EAAEM,IAAI,CAACR;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CE,IAAI,CAACT,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACZ,EAAA,CA5BID,SAAS;EAAA,QAGMH,WAAW;AAAA;AAAAoB,EAAA,GAH1BjB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}