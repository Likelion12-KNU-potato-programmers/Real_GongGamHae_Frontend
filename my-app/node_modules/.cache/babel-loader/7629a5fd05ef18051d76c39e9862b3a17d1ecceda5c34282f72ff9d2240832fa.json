{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostWritePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\nconst PostWrite = () => {\n  _s();\n  const navigate = useNavigate(); // useNavigate 훅 초기화\n  const {\n    isLogin,\n    userId,\n    nickname\n  } = useAuth();\n  const [category, setCategory] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newPost = {\n      id: userId,\n      category,\n      title,\n      content\n    };\n    try {\n      const response = await fetch('http://localhost:8000/PostWrite', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      });\n      console.log(\"1\");\n      if (!response.ok) {\n        throw new Error('Failed to submit the post');\n      }\n      console.log(\"2\");\n      const result = await response.json();\n      console.log('Post submitted successfully:', result);\n      navigate('/');\n    } catch (error) {\n      console.error('Error submitting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), categories.map((cat, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(PostWrite, \"LT9pAPCysSn+jCUbfMygWTyfCqg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = PostWrite;\nexport default PostWrite;\nvar _c;\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","categories","PostWrite","_s","navigate","isLogin","userId","nickname","category","setCategory","title","setTitle","content","setContent","handleSubmit","event","preventDefault","newPost","id","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","result","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","map","cat","index","type","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostWritePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../components/Auth/AuthContext';\r\n\r\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\r\n\r\nconst PostWrite = () => {\r\n    const navigate = useNavigate(); // useNavigate 훅 초기화\r\n    const { isLogin, userId, nickname } = useAuth();\r\n    \r\n    const [category, setCategory] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    \r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const newPost = {\r\n            id: userId,\r\n            category,\r\n            title,\r\n            content,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/PostWrite', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newPost),\r\n            });\r\n            \r\n            console.log(\"1\")\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit the post');\r\n            }\r\n            console.log(\"2\")\r\n\r\n            const result = await response.json();\r\n            console.log('Post submitted successfully:', result);\r\n            \r\n            navigate('/');\r\n        } catch (error) {\r\n            console.error('Error submitting post:', error);\r\n            \r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>글쓰기</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>카테고리:</label>\r\n                    <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                        <option value=\"\">카테고리를 선택하세요</option>\r\n                        {categories.map((cat, index) => (\r\n                            <option key={index} value={cat}>{cat}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>제목:</label>\r\n                    <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>내용:</label>\r\n                    <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n                </div>\r\n                <button type=\"submit\">글쓰기</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostWrite;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}