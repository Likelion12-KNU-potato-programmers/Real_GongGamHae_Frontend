{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    category,\n    id\n  } = useParams();\n  const location = useLocation();\n  const {\n    userCategory\n  } = useAuth(); // useAuth로부터 category 받아오기\n\n  const [post, setPost] = useState(null);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPostAndComments = async () => {\n      try {\n        setLoading(true);\n        console.log(userCategory);\n\n        // 게시물 가져오기\n        let postEndpoint = '';\n        let commentEndPoint = '';\n        if (userCategory === '자유게시판') {\n          postEndpoint = `http://localhost:8080/api/jayuposts/${id}`;\n          commentEndPoint = `http://localhost:8080/api/jayucomments/${id}`;\n        } else if (category === '공감게시판') {\n          postEndpoint = `http://localhost:8080/api/gonggamposts/${id}`;\n          commentEndPoint = `http://localhost:8080/api/gonggamcomments/${id}`;\n        } else if (category === 'bestposts') {\n          postEndpoint = `http://localhost:8080/api/bestposts/${id}`;\n          commentEndPoint = `http://localhost:8080/api/bestcomments/${id}`;\n        } else {\n          throw new Error(`Invalid category: ${category}`);\n        }\n        const postResponse = await fetch(postEndpoint);\n        if (!postResponse.ok) {\n          throw new Error('Failed to fetch post');\n        }\n        const postData = await postResponse.json();\n        setPost(postData);\n\n        // 댓글 가져오기\n        const commentResponse = await fetch(commentEndPoint);\n        if (!commentResponse.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const commentsData = await commentResponse.json();\n        setComments(commentsData);\n      } catch (error) {\n        console.error('Error fetching post and comments:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPostAndComments();\n  }, [category, id]);\n  const handleAddComment = async () => {\n    // 댓글 추가 로직\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: c.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"yDMUVjgYdXmA73WNlY62D/TfrSI=\", false, function () {\n  return [useParams, useLocation, useAuth];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useAuth","jsxDEV","_jsxDEV","PostPage","_s","category","id","location","userCategory","post","setPost","comment","setComment","comments","setComments","loading","setLoading","error","setError","fetchPostAndComments","console","log","postEndpoint","commentEndPoint","Error","postResponse","fetch","ok","postData","json","commentResponse","commentsData","message","handleAddComment","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","value","onChange","e","target","placeholder","onClick","map","c","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../components/Auth/AuthContext';\r\n\r\nconst PostPage = () => {\r\n  const { category, id } = useParams();\r\n  const location = useLocation();\r\n  const { userCategory } = useAuth(); // useAuth로부터 category 받아오기\r\n\r\n  const [post, setPost] = useState(null);\r\n  const [comment, setComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPostAndComments = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log(userCategory)\r\n\r\n        // 게시물 가져오기\r\n        let postEndpoint = '';\r\n        let commentEndPoint = '';\r\n        if (userCategory === '자유게시판') {\r\n          postEndpoint = `http://localhost:8080/api/jayuposts/${id}`;\r\n          commentEndPoint = `http://localhost:8080/api/jayucomments/${id}`\r\n\r\n        } else if (category === '공감게시판') {\r\n          postEndpoint = `http://localhost:8080/api/gonggamposts/${id}`;\r\n          commentEndPoint = `http://localhost:8080/api/gonggamcomments/${id}`\r\n\r\n        } else if (category === 'bestposts') {\r\n          postEndpoint = `http://localhost:8080/api/bestposts/${id}`;\r\n          commentEndPoint = `http://localhost:8080/api/bestcomments/${id}`\r\n\r\n        } else {\r\n          throw new Error(`Invalid category: ${category}`);\r\n        }\r\n\r\n        const postResponse = await fetch(postEndpoint);\r\n        if (!postResponse.ok) {\r\n          throw new Error('Failed to fetch post');\r\n        }\r\n        const postData = await postResponse.json();\r\n        setPost(postData);\r\n\r\n\r\n        // 댓글 가져오기\r\n        const commentResponse = await fetch(commentEndPoint);\r\n        if (!commentResponse.ok) {\r\n          throw new Error('Failed to fetch comments');\r\n        }\r\n        const commentsData = await commentResponse.json();\r\n        setComments(commentsData);\r\n\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching post and comments:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPostAndComments();\r\n  }, [category, id]);\r\n\r\n  const handleAddComment = async () => {\r\n    // 댓글 추가 로직\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!post) {\r\n    return <div>게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n\r\n      <div>\r\n        <h2>댓글</h2>\r\n        <textarea\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요\"\r\n        ></textarea>\r\n        <button onClick={handleAddComment}>댓글 추가</button>\r\n        <div>\r\n          {comments.map((c) => (\r\n            <div key={c.id}>\r\n              <p>{c.content}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}