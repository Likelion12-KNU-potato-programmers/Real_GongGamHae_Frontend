{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//// useAuth와 AuthContext는 AuthProvider 외부에 정의되어야 한다.\n// AuthContext 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n// useAuth 훅 정의\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider 컴포넌트 정의\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLogin, setIsLogin] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const login = id => {\n    setUserId({\n      id\n    });\n  };\n  const logout = () => {\n    setUserId(null);\n  };\n\n  // AuthContext.Provider로 상태와 함수를 전달\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLogin,\n      userId,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n// AuthProvider를 기본 내보내기로 export\n_s2(AuthProvider, \"lTfmlbC8c+Ha2gSFjXFM484WAmQ=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isLogin","setIsLogin","userId","setUserId","login","id","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n//// useAuth와 AuthContext는 AuthProvider 외부에 정의되어야 한다.\r\n// AuthContext 생성\r\nconst AuthContext = createContext(null);\r\n// useAuth 훅 정의\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n\r\n// AuthProvider 컴포넌트 정의\r\nconst AuthProvider = ({ children }) => {\r\n    \r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    \r\n    const login = (id) => {\r\n        setUserId({ id });\r\n    };\r\n\r\n    const logout = () => {\r\n        setUserId(null);\r\n    };\r\n    \r\n\r\n\r\n    // AuthContext.Provider로 상태와 함수를 전달\r\n    return (\r\n        <AuthContext.Provider value={{ isLogin, userId, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// AuthProvider를 기본 내보내기로 export\r\nexport default AuthProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;;AAG9C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AACvC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAIpD;AAAAE,EAAA,CAJaD,OAAO;AAKpB,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAEnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMe,KAAK,GAAIC,EAAE,IAAK;IAClBF,SAAS,CAAC;MAAEE;IAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBH,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;;EAID;EACA,oBACIV,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAER,OAAO;MAAEE,MAAM;MAAEE,KAAK;MAAEE;IAAO,CAAE;IAAAR,QAAA,EAC3DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAb,GAAA,CAvBMF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}