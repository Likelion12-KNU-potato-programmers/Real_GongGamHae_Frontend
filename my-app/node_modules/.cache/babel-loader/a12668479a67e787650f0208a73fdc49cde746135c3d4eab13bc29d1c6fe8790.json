{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Real_GongGamHae_Frontend-Joonsik\\\\Real_GongGamHae_Frontend-Joonsik\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/common/Header';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport '../css/MainPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\nconst MainPage = () => {\n  _s();\n  const {\n    isLogin,\n    userCategory,\n    updateCategory\n  } = useAuth();\n  const [selectedCategory, setSelectedCategory] = useState('자유게시판');\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [categoryEndpoint, setCategoryEndpoint] = useState('jayuposts');\n  const [endpoint, setEndpoint] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let endpoint = '';\n        if (selectedCategory === '자유게시판') {\n          endpoint = 'jayuposts';\n        } else if (selectedCategory === '공감게시판') {\n          endpoint = 'gonggamposts';\n        } else if (selectedCategory === 'BEST게시판') {\n          endpoint = 'bestposts';\n        }\n        const response = await fetch(`http://localhost:8080/api/${endpoint}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        setPosts(data);\n        setLoading(false);\n        setCategoryEndpoint(endpoint);\n        setEndpoint(endpoint);\n        updateCategory(selectedCategory);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts(selectedCategory);\n  }, [selectedCategory]);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories-container\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategoryChange(category),\n        className: `category-button ${selectedCategory === category ? 'selected' : ''}`,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/PostWritePage/${categoryEndpoint}`,\n      className: \"write-link\",\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/api/${categoryEndpoint}/${post.id}`,\n          className: \"post-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"post-title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-content\",\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-author\",\n            children: [\"\\uC791\\uC131\\uC790: \", post.userInfo.userid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-comment-count\",\n            children: [\"\\uB313\\uAE00 \\uC218: \", post.commentCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"sYiE7rChcDlLvC4E/3pxO+/beVY=\", false, function () {\n  return [useAuth];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","Header","useAuth","jsxDEV","_jsxDEV","categories","MainPage","_s","isLogin","userCategory","updateCategory","selectedCategory","setSelectedCategory","posts","setPosts","loading","setLoading","categoryEndpoint","setCategoryEndpoint","endpoint","setEndpoint","fetchPosts","response","fetch","ok","Error","data","json","error","console","handleCategoryChange","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","to","length","post","id","title","content","userInfo","userid","commentCount","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Real_GongGamHae_Frontend-Joonsik/Real_GongGamHae_Frontend-Joonsik/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/common/Header';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport '../css/MainPage.css'\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\n\nconst MainPage = () => {\n    const { isLogin, userCategory, updateCategory } = useAuth();\n    const [selectedCategory, setSelectedCategory] = useState('자유게시판');\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [categoryEndpoint, setCategoryEndpoint] = useState('jayuposts');\n    const [endpoint, setEndpoint] = useState('');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                let endpoint = '';\n                if (selectedCategory === '자유게시판') {\n                    endpoint = 'jayuposts';\n                } else if (selectedCategory === '공감게시판') {\n                    endpoint = 'gonggamposts';\n                } else if (selectedCategory === 'BEST게시판') {\n                    endpoint = 'bestposts';\n                }\n\n                const response = await fetch(`http://localhost:8080/api/${endpoint}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch posts');\n                }\n                const data = await response.json();\n                setPosts(data);\n                setLoading(false);\n                setCategoryEndpoint(endpoint);\n                setEndpoint(endpoint);\n                updateCategory(selectedCategory);\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        fetchPosts(selectedCategory);\n    }, [selectedCategory]);\n\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n    };\n\n    return (\n        <div className=\"main-container\">\n            <Header />\n            <h1 className=\"main-title\">메인 페이지</h1>\n            <div className=\"categories-container\">\n                {categories.map((category) => (\n                    <button\n                        key={category}\n                        onClick={() => handleCategoryChange(category)}\n                        className={`category-button ${selectedCategory === category ? 'selected' : ''}`}\n                    >\n                        {category}\n                    </button>\n                ))}\n            </div>\n\n            {isLogin && (\n                <Link to={`/PostWritePage/${categoryEndpoint}`} className=\"write-link\">글쓰기</Link>\n            )}\n\n            {loading ? (\n                <p>Loading...</p>\n            ) : posts.length === 0 ? (\n                <p>No posts found for selected category</p>\n            ) : (\n                <ul className=\"posts-list\">\n                    {posts.map((post) => (\n                        <li key={post.id} className=\"post-item\">\n                            <Link to={`/api/${categoryEndpoint}/${post.id}`} className=\"post-link\">\n                                <h2 className=\"post-title\">{post.title}</h2>\n                                <p className=\"post-content\">{post.content}</p>\n                                <p className=\"post-author\">작성자: {post.userInfo.userid}</p>\n                                <p className=\"post-comment-count\">댓글 수: {post.commentCount}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );    \n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}