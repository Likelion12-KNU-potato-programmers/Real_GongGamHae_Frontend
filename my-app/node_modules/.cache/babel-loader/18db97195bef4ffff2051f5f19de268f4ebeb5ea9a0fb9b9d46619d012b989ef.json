{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostWritePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostWrite = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isLogin,\n    userId\n  } = useAuth();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleFileChange = event => {\n    setImageFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!title || !content) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    const formData = new FormData();\n    const postRequest = {\n      userId: userId,\n      // userId 추가\n      title: title,\n      content: content\n    };\n\n    // Blob으로 감싸지 않고 바로 JSON 형식의 문자열로 추가합니다.\n    formData.append('post', JSON.stringify(postRequest));\n    if (imageFile) {\n      formData.append('imageFile', imageFile);\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/jayuposts', {\n        method: 'POST',\n        body: formData,\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error('글을 제출하는데 실패했습니다.');\n      }\n      const result = await response.json();\n      setSuccess('글이 성공적으로 제출되었습니다.');\n      console.log('Post submitted successfully:', result);\n      navigate('/');\n    } catch (error) {\n      setError(error.message);\n      console.error('Error submitting post:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isLogin) {\n    navigate('/login');\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC774\\uBBF8\\uC9C0:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? '제출 중...' : '글쓰기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(PostWrite, \"qujuneAzEXTC1m4qGgJK3OVSvyc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = PostWrite;\nexport default PostWrite;\nvar _c;\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","PostWrite","_s","navigate","isLogin","userId","title","setTitle","content","setContent","imageFile","setImageFile","loading","setLoading","error","setError","success","setSuccess","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","postRequest","append","JSON","stringify","response","fetch","method","body","credentials","ok","Error","result","json","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","type","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostWritePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../components/Auth/AuthContext';\r\n\r\nconst PostWrite = () => {\r\n    const navigate = useNavigate();\r\n    const { isLogin, userId } = useAuth();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setImageFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!title || !content) {\r\n            setError('모든 필드를 입력해주세요.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        const formData = new FormData();\r\n        const postRequest = {\r\n            userId: userId, // userId 추가\r\n            title: title,\r\n            content: content\r\n        };\r\n\r\n        // Blob으로 감싸지 않고 바로 JSON 형식의 문자열로 추가합니다.\r\n        formData.append('post', JSON.stringify(postRequest));\r\n        \r\n        if (imageFile) {\r\n            formData.append('imageFile', imageFile);\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/jayuposts', {\r\n                method: 'POST',\r\n                body: formData,\r\n                credentials: \"include\"\r\n\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('글을 제출하는데 실패했습니다.');\r\n            }\r\n\r\n            const result = await response.json();\r\n            setSuccess('글이 성공적으로 제출되었습니다.');\r\n            console.log('Post submitted successfully:', result);\r\n\r\n            navigate('/');\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.error('Error submitting post:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!isLogin) {\r\n        navigate('/login');\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>글쓰기</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                {error && <div style={{ color: 'red' }}>{error}</div>}\r\n                {success && <div style={{ color: 'green' }}>{success}</div>}\r\n                \r\n                <div>\r\n                    <label>제목:</label>\r\n                    <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>내용:</label>\r\n                    <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>이미지:</label>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </div>\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? '제출 중...' : '글쓰기'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostWrite;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}