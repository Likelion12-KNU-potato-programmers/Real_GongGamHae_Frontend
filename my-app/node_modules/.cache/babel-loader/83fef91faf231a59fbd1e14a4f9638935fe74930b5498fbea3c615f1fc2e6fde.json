{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 서버에서 실패하면 각 실패 사항에 따라 다른 에러메시지를 리턴함\n    try {\n      const response = await fetch('http://localhost:8000/loginpage/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id,\n          password\n        })\n      });\n\n      // 상태 코드 확인\n      if (response.status === 200) {\n        // 로그인 성공\n        const data = await response.json();\n        console.log('로그인 성공:', data);\n      } else if (response.status === 404) {\n        // 사용자를 찾을 수 없음\n        throw new Error('사용자를 찾을 수 없습니다.');\n      } else if (response.status === 401) {\n        // 잘못된 비밀번호\n        throw new Error('잘못된 비밀번호입니다.');\n      } else {\n        // 기타 다른 상태 코드 처리\n        throw new Error('서버 오류');\n      }\n      const data = await response.json();\n      console.log('로그인 성공:', data);\n    } catch (error) {\n      console.error('로그인 오류1:', error.message);\n      alert(error.message); // 에러 메시지를 알림창으로 표시\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC544\\uC9C1 \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registerpage\",\n        children: \"\\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"S/1hApaq5SeFcBc+WojiGVcOGsI=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","LoginPage","_s","id","setId","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","data","json","console","log","Error","error","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n\r\n    // 서버에서 실패하면 각 실패 사항에 따라 다른 에러메시지를 리턴함\r\n    try {\r\n        const response = await fetch('http://localhost:8000/loginpage/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ id, password }),\r\n        });\r\n  \r\n        // 상태 코드 확인\r\n        if (response.status === 200) {\r\n            // 로그인 성공\r\n            const data = await response.json();\r\n            console.log('로그인 성공:', data);\r\n        } else if (response.status === 404) {\r\n            // 사용자를 찾을 수 없음\r\n            throw new Error('사용자를 찾을 수 없습니다.');\r\n        } else if (response.status === 401) {\r\n            // 잘못된 비밀번호\r\n            throw new Error('잘못된 비밀번호입니다.');\r\n        } else {\r\n            // 기타 다른 상태 코드 처리\r\n            throw new Error('서버 오류');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        console.log('로그인 성공:', data);\r\n      } catch (error) {\r\n        console.error('로그인 오류1:', error.message);\r\n        alert(error.message); // 에러 메시지를 알림창으로 표시\r\n      }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>로그인</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>ID:</label>\r\n          <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n      <p>아직 계정이 없으신가요? <Link to=\"/registerpage\">여기를 클릭하여 회원가입하세요</Link>.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}