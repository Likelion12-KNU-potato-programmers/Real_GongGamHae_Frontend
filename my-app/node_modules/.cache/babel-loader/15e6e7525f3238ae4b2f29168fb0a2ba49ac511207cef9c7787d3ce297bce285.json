{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostWritePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostWrite = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isLogin,\n    userId,\n    userCategory\n  } = useAuth();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleFileChange = event => {\n    setImageFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!title || !content) {\n      setError('모든 필드를 입력해주세요.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    let postEndpoint = ''; // 게시판에 따라 endpoint 선택\n    if (userCategory === '자유게시판') {\n      postEndpoint = `http://localhost:8080/api/jayuposts`;\n    } else if (userCategory === '공감게시판') {\n      postEndpoint = `http://localhost:8080/api/gonggamposts`;\n    } else {\n      setError('유효하지 않은 카테고리입니다.');\n      setLoading(false);\n      return;\n    }\n    const postBody = {\n      title: title,\n      content: content\n    };\n    if (imageFile) {\n      // 이미지가 있는 경우에는 multipart/form-data로 전송\n      const formData = new FormData();\n      formData.append('post', JSON.stringify(postBody));\n      formData.append('imageFile', imageFile, imageFile.name);\n      try {\n        const postResponse = await fetch(postEndpoint, {\n          method: 'POST',\n          body: formData,\n          credentials: 'include'\n        });\n        handleResponse(postResponse);\n      } catch (error) {\n        setError(error.message);\n        console.error('Error submitting post:', error);\n        setLoading(false);\n      }\n    } else {\n      // 이미지가 없는 경우에는 application/json으로 전송\n      try {\n        const postResponse = await fetch(postEndpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody),\n          credentials: 'include'\n        });\n        handleResponse(postResponse);\n      } catch (error) {\n        setError(error.message);\n        console.error('Error submitting post:', error);\n        setLoading(false);\n      }\n    }\n  };\n  const handleResponse = async response => {\n    if (!response.ok) {\n      throw new Error('Failed to fetch post');\n    }\n    const postData = await response.json();\n    console.log('Post submitted successfully:', postData);\n    setSuccess('글이 성공적으로 제출되었습니다.');\n    navigate('/');\n  };\n  if (!isLogin) {\n    navigate('/login');\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC774\\uBBF8\\uC9C0:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? '제출 중...' : '글쓰기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(PostWrite, \"7y1fYcc1Binnedbj01Gjg+51MrE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = PostWrite;\nexport default PostWrite;\nvar _c;\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","PostWrite","_s","navigate","isLogin","userId","userCategory","title","setTitle","content","setContent","imageFile","setImageFile","loading","setLoading","error","setError","success","setSuccess","handleFileChange","event","target","files","handleSubmit","preventDefault","postEndpoint","postBody","formData","FormData","append","JSON","stringify","name","postResponse","fetch","method","body","credentials","handleResponse","message","console","headers","response","ok","Error","postData","json","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","type","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostWritePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../components/Auth/AuthContext';\r\n\r\nconst PostWrite = () => {\r\n    const navigate = useNavigate();\r\n    const { isLogin, userId, userCategory } = useAuth();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setImageFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!title || !content) {\r\n            setError('모든 필드를 입력해주세요.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        let postEndpoint = ''; // 게시판에 따라 endpoint 선택\r\n        if (userCategory === '자유게시판') {\r\n            postEndpoint = `http://localhost:8080/api/jayuposts`;\r\n        } else if (userCategory === '공감게시판') {\r\n            postEndpoint = `http://localhost:8080/api/gonggamposts`;\r\n        } else {\r\n            setError('유효하지 않은 카테고리입니다.');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const postBody = {\r\n            title: title,\r\n            content: content,\r\n        };\r\n\r\n        if (imageFile) {\r\n            // 이미지가 있는 경우에는 multipart/form-data로 전송\r\n            const formData = new FormData();\r\n            formData.append('post', JSON.stringify(postBody));\r\n            formData.append('imageFile', imageFile, imageFile.name);\r\n\r\n            try {\r\n                const postResponse = await fetch(postEndpoint, {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                    credentials: 'include',\r\n                });\r\n                handleResponse(postResponse);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                console.error('Error submitting post:', error);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            // 이미지가 없는 경우에는 application/json으로 전송\r\n            try {\r\n                const postResponse = await fetch(postEndpoint, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(postBody),\r\n                    credentials: 'include',\r\n                });\r\n                handleResponse(postResponse);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                console.error('Error submitting post:', error);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleResponse = async (response) => {\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch post');\r\n        }\r\n        const postData = await response.json();\r\n        console.log('Post submitted successfully:', postData);\r\n        setSuccess('글이 성공적으로 제출되었습니다.');\r\n        navigate('/');\r\n    };\r\n\r\n    if (!isLogin) {\r\n        navigate('/login');\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>글쓰기</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                {error && <div style={{ color: 'red' }}>{error}</div>}\r\n                {success && <div style={{ color: 'green' }}>{success}</div>}\r\n\r\n                <div>\r\n                    <label>제목:</label>\r\n                    <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>내용:</label>\r\n                    <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>이미지:</label>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </div>\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? '제출 중...' : '글쓰기'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostWrite;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}