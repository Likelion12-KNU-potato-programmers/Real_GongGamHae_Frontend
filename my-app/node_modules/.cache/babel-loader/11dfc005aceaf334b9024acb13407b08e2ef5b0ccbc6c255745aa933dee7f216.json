{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  // ※ 초기화는 서버에서 받아와야함 이거 임시임\n  const [username, setUsername] = useState('JohnDoe'); // 임시로 사용자 이름 설정\n  const [userPosts, setUserPosts] = useState([{\n    id: 1,\n    title: '첫 번째 게시물',\n    content: '첫 번째 게시물 내용입니다.'\n  }, {\n    id: 2,\n    title: '두 번째 게시물',\n    content: '두 번째 게시물 내용입니다.'\n  }, {\n    id: 3,\n    title: '세 번째 게시물',\n    content: '세 번째 게시물 내용입니다.'\n  }]); // 임시로 사용자가 작성한 게시물 목록 설정\n\n  const handleLogout = () => {\n    // 로그아웃 기능 구현\n    // 여기서는 간단하게 로그인 정보를 삭제하고 로그인 페이지로 이동하는 것으로 가정합니다.\n    localStorage.removeItem('isLoggedIn'); // 예를 들어, 로그인 상태를 localStorage에 저장했다면 삭제\n    window.location.href = '/login'; // 로그인 페이지로 이동\n  };\n  const handleWithdrawal = () => {\n    // 회원탈퇴 기능 구현\n    // 여기서는 간단하게 회원 정보를 삭제하고 로그인 페이지로 이동하는 것으로 가정합니다.\n    localStorage.removeItem('userData'); // 예를 들어, 사용자 정보를 localStorage에 저장했다면 삭제\n    window.location.href = '/login'; // 로그인 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC544\\uC774\\uB514: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdrawal,\n      children: \"\\uD68C\\uC6D0\\uD0C8\\uD1F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(MyPage, \"f1U4xoU30Ac4Sgzi02jIytUPkYk=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","MyPage","_s","username","setUsername","userPosts","setUserPosts","id","title","content","handleLogout","localStorage","removeItem","window","location","href","handleWithdrawal","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MyPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MyPage = () => {\r\n\r\n\r\n    // ※ 초기화는 서버에서 받아와야함 이거 임시임\r\n    const [username, setUsername] = useState('JohnDoe'); // 임시로 사용자 이름 설정\r\n    const [userPosts, setUserPosts] = useState([\r\n        { id: 1, title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n        { id: 2, title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n        { id: 3, title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' }\r\n    ]); // 임시로 사용자가 작성한 게시물 목록 설정\r\n\r\n    const handleLogout = () => {\r\n        // 로그아웃 기능 구현\r\n        // 여기서는 간단하게 로그인 정보를 삭제하고 로그인 페이지로 이동하는 것으로 가정합니다.\r\n        localStorage.removeItem('isLoggedIn'); // 예를 들어, 로그인 상태를 localStorage에 저장했다면 삭제\r\n        window.location.href = '/login'; // 로그인 페이지로 이동\r\n    };\r\n\r\n    const handleWithdrawal = () => {\r\n        // 회원탈퇴 기능 구현\r\n        // 여기서는 간단하게 회원 정보를 삭제하고 로그인 페이지로 이동하는 것으로 가정합니다.\r\n        localStorage.removeItem('userData'); // 예를 들어, 사용자 정보를 localStorage에 저장했다면 삭제\r\n        window.location.href = '/login'; // 로그인 페이지로 이동\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>내 정보</h2>\r\n            <p>아이디: {username}</p>\r\n\r\n            <h2>내가 쓴 글</h2>\r\n            <ul>\r\n                {userPosts.map(post => (\r\n                    <li key={post.id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.content}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <button onClick={handleLogout}>로그아웃</button>\r\n            <button onClick={handleWithdrawal}>회원탈퇴</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}