{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\n  const post = {\n    1: {\n      title: '첫 번째 게시물',\n      content: '첫 번째 게시물 내용입니다.'\n    },\n    2: {\n      title: '두 번째 게시물',\n      content: '두 번째 게시물 내용입니다.'\n    },\n    3: {\n      title: '세 번째 게시물',\n      content: '세 번째 게시물 내용입니다.'\n    }\n  }[id];\n\n  // 댓글 관리를 위한 상태\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentContent, setEditCommentContent] = useState('');\n\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\n\n  // 댓글 추가 핸들러\n  const handleAddComment = () => {\n    if (comment.trim() !== '') {\n      setComments([...comments, comment]);\n      setComment('');\n    }\n  };\n\n  // 댓글 수정 핸들러\n  const handleEditComment = id => {\n    const commentToEdit = comments.find(c => c.id === id);\n    if (commentToEdit) {\n      setEditCommentId(id);\n      setEditCommentContent(commentToEdit.content);\n    }\n  };\n\n  // 댓글 업데이트 핸들러\n  const handleUpdateComment = () => {\n    setComments(comments.map(c => c.id === editCommentId ? {\n      ...c,\n      content: editCommentContent\n    } : c));\n    setEditCommentId(null);\n    setEditCommentContent('');\n  };\n\n  // 댓글 삭제 핸들러 (선택 사항)\n  const handleDeleteComment = id => {\n    setComments(comments.filter(c => c.id !== id));\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"+1viQwMxy+ajkEGLfh7iqGvrbqw=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","id","post","title","content","comment","setComment","comments","setComments","editCommentId","setEditCommentId","editCommentContent","setEditCommentContent","handleAddComment","trim","handleEditComment","commentToEdit","find","c","handleUpdateComment","map","handleDeleteComment","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n\r\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\r\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\r\n  const post = {\r\n    1: { title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n    2: { title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n    3: { title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' },\r\n  }[id];\r\n\r\n  \r\n  \r\n  // 댓글 관리를 위한 상태\r\n  const [comment, setComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [editCommentId, setEditCommentId] = useState(null);\r\n  const [editCommentContent, setEditCommentContent] = useState('');\r\n\r\n\r\n\r\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\r\n\r\n\r\n\r\n\r\n\r\n  // 댓글 추가 핸들러\r\n  const handleAddComment = () => {\r\n    if (comment.trim() !== '') {\r\n      setComments([...comments, comment]);\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  // 댓글 수정 핸들러\r\n  const handleEditComment = (id) => {\r\n    const commentToEdit = comments.find((c) => c.id === id);\r\n    if (commentToEdit) {\r\n      setEditCommentId(id);\r\n      setEditCommentContent(commentToEdit.content);\r\n    }\r\n  };\r\n\r\n  // 댓글 업데이트 핸들러\r\n  const handleUpdateComment = () => {\r\n    setComments(\r\n      comments.map((c) =>\r\n        c.id === editCommentId ? { ...c, content: editCommentContent } : c\r\n      )\r\n    );\r\n    setEditCommentId(null);\r\n    setEditCommentContent('');\r\n  };\r\n\r\n  // 댓글 삭제 핸들러 (선택 사항)\r\n  const handleDeleteComment = (id) => {\r\n    setComments(comments.filter((c) => c.id !== id));\r\n  };\r\n\r\n\r\n\r\n  \r\n  if (!post) {\r\n    return <div>게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n\r\n      <div>\r\n        <h2>댓글</h2>\r\n        <textarea\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요\"\r\n        ></textarea>\r\n        <button onClick={handleAddComment}>댓글 추가</button>\r\n        <ul>\r\n          {comments.map((comment, index) => (\r\n            <li key={index}>{comment}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}