{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Real_GongGamHae_Frontend-Joonsik\\\\Real_GongGamHae_Frontend-Joonsik\\\\my-app\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext'; // AuthContext에서 useAuth 훅을 가져옴\nimport '../css/LoginPage.css'; // LoginPage.css 스타일시트 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth(); // useAuth 훅을 사용하여 login 함수 가져오기\n  const navigate = useNavigate();\n  const [userAccount, setuserAccount] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [nickname, setNickname] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      userAccount: userAccount,\n      password: password,\n      nickname: nickname\n    };\n    try {\n      // 로그인 요청\n      const loginResponse = await fetch('http://localhost:8080/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData),\n        credentials: \"include\"\n      });\n      if (loginResponse.ok) {\n        const responseData = await loginResponse.text();\n        login(userAccount); // 사용자 정보를 인자로 login 함수 호출\n        console.log('로그인 성공:', responseData);\n        navigate('/');\n\n        // 정보 요청\n        const nicknameResponse = await fetch('http://localhost:8080/api/users/me', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include' // 쿠키를 포함하여 요청\n        });\n        console.log(nicknameResponse.ok);\n        if (nicknameResponse.ok) {\n          const nicknameData = await nicknameResponse.json(); // JSON으로 파싱\n          login(userAccount, nicknameData.nickname);\n          setNickname(nicknameData.nickname); // 닉네임을 상태로 설정\n        } else {\n          console.error('닉네임 가져오기 실패:', nicknameResponse.statusText);\n          // 실패 시 적절한 오류 처리\n        }\n      }\n    } catch (error) {\n      console.error('로그인 오류:', error.message);\n      setErrorMessage('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAccount,\n          onChange: e => setuserAccount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC544\\uC9C1 \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registerpage\",\n        children: \"\\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC5EC \\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 30\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), nickname && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4, \", nickname, \"\\uB2D8!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"+cbjmliHT97zWTP70JBO1R9e9a0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","login","navigate","userAccount","setuserAccount","password","setPassword","errorMessage","setErrorMessage","nickname","setNickname","handleSubmit","e","preventDefault","formData","loginResponse","fetch","method","headers","body","JSON","stringify","credentials","ok","responseData","text","console","log","nicknameResponse","nicknameData","json","error","statusText","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","style","color","to","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Real_GongGamHae_Frontend-Joonsik/Real_GongGamHae_Frontend-Joonsik/my-app/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext'; // AuthContext에서 useAuth 훅을 가져옴\nimport '../css/LoginPage.css'; // LoginPage.css 스타일시트 가져오기\n\nconst LoginPage = () => {\n    const { login } = useAuth(); // useAuth 훅을 사용하여 login 함수 가져오기\n    const navigate = useNavigate();\n    const [userAccount, setuserAccount] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [nickname, setNickname] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        const formData = {\n            userAccount: userAccount,\n            password: password,\n            nickname: nickname,\n        };\n    \n        try {\n            // 로그인 요청\n            const loginResponse = await fetch('http://localhost:8080/api/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData),\n                credentials: \"include\"\n            });\n    \n            if (loginResponse.ok) {\n                const responseData = await loginResponse.text();\n                login(userAccount); // 사용자 정보를 인자로 login 함수 호출\n                console.log('로그인 성공:', responseData);\n                navigate('/');\n            \n                // 정보 요청\n                const nicknameResponse = await fetch('http://localhost:8080/api/users/me', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    credentials: 'include' // 쿠키를 포함하여 요청\n                });\n\n                console.log(nicknameResponse.ok)\n                if (nicknameResponse.ok) {\n                    const nicknameData = await nicknameResponse.json(); // JSON으로 파싱\n                    login(userAccount, nicknameData.nickname)\n                    setNickname(nicknameData.nickname); // 닉네임을 상태로 설정\n                } else {\n                    console.error('닉네임 가져오기 실패:', nicknameResponse.statusText);\n                    // 실패 시 적절한 오류 처리\n                }\n            }\n        } catch (error) {\n            console.error('로그인 오류:', error.message);\n            setErrorMessage('로그인 중 오류가 발생했습니다. 다시 시도해주세요.');\n        }\n    };\n    \n    return (\n        <div className=\"login-container\">\n            <h2>로그인</h2>\n            <form className=\"login-form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>ID:</label>\n                    <input type=\"text\" value={userAccount} onChange={(e) => setuserAccount(e.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                </div>\n                <button className=\"login-button\" type=\"submit\">로그인</button>\n            </form>\n            <p style={{ color: 'red' }}>{errorMessage}</p>\n            <p>아직 계정이 없으신가요? <Link to=\"/registerpage\">여기를 클릭하여 회원가입하세요</Link>.</p>\n            {nickname && <p>환영합니다, {nickname}님!</p>}\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}