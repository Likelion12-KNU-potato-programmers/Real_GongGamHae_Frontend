{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Real_GongGamHae_Frontend-Joonsik\\\\Real_GongGamHae_Frontend-Joonsik\\\\my-app\\\\src\\\\pages\\\\MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext'; // useAuth 가져오기\nimport Header from '../components/common/Header'; // header 가져오기\n\nimport '../css/MyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // 닉네임 옆의 연필버튼의 드롭다운 on off 버튼\n  const dropdownRef = useRef(null); // 찾아봐야함\n  const navigate = useNavigate();\n  const {\n    isLogin,\n    userId,\n    nickname,\n    logout,\n    setNickname\n  } = useAuth(); // useAuth로부터 필요한 값 가져오기\n  const [newNickname, setNewNickname] = useState(''); // 새 닉네임 입력 상태 추가\n  const [userPosts, setUserPosts] = useState([]); // State to store user's posts\n  const [profileImageUrl, setProfileImageUrl] = useState(''); // 프로필 이미지 URL 상태 추가\n\n  const fetchUserPosts = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/me/posts`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const posts = await response.json();\n        setUserPosts(posts);\n      } else {\n        console.error('Failed to fetch user posts');\n      }\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n    }\n  };\n\n  // 유저 프로필 사진 불러오기\n  const fetchUserProfileImage = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/users/me`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const {\n          profileImageUrl\n        } = await response.json();\n        setProfileImageUrl(profileImageUrl);\n      } else {\n        console.error('Failed to fetch profile image');\n      }\n    } catch (error) {\n      console.error('Error fetching profile image:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPosts();\n    fetchUserProfileImage(); // 프로필 이미지를 가져오는 함수 호출\n  }, []);\n\n  // 로그아웃 버튼을 누를 시\n  const handleLogout = () => {\n    try {\n      // AuthContext에서 logout() 함\n      logout();\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n    navigate('/');\n  };\n\n  // 드롭다운 내에서 이름을 바꿀 시 변경될 코드\n  const handleNicknameChange = async () => {\n    console.log(userId, nickname, newNickname);\n    try {\n      // 서버로 새 닉네임을 업데이트하는 요청을 보냄\n      const response = await fetch(`http://localhost:8080/api/users/me/nickname`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nickname: newNickname\n        }),\n        // 수정: 새로운 닉네임과 사용자 ID를 보냄\n        credentials: 'include' // 쿠키를 포함하여 요청\n      });\n      console.log(response.ok);\n      if (response.ok) {\n        // 응답이 성공적으로 받아졌다면\n        const data = await response.text();\n        console.log(data);\n        // 새로운 닉네임을 설정합니다.\n        setNickname(newNickname);\n        setNewNickname('');\n        setIsDropdownOpen(false);\n      } else {\n        console.error('Failed to update nickname on the server');\n      }\n    } catch (error) {\n      console.error('Error updating nickname:', error);\n    }\n  };\n\n  // 드롭다운 Open Close 코드\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  // 외부 클릭시 드롭다운 Close 코드\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsDropdownOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mypage-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [profileImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileImageUrl,\n        alt: \"Profile\",\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading profile image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nickname-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"nickname\",\n            children: [\"\\uB2C9\\uB124\\uC784: \", nickname, \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleDropdown,\n              className: \"edit-button\",\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: dropdownRef,\n            className: \"dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newNickname,\n              onChange: e => setNewNickname(e.target.value),\n              placeholder: \"\\uC0C8 \\uB2C9\\uB124\\uC784\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNicknameChange,\n              children: \"\\uB2C9\\uB124\\uC784 \\uBCC0\\uACBD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user-id\",\n          children: [\"\\uC544\\uC774\\uB514: \", userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"posts-list\",\n      children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s(MyPage, \"hZjfuK+c9Tk2vkCNoYR1Bi8pfxw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","useAuth","Header","jsxDEV","_jsxDEV","MyPage","_s","isDropdownOpen","setIsDropdownOpen","dropdownRef","navigate","isLogin","userId","nickname","logout","setNickname","newNickname","setNewNickname","userPosts","setUserPosts","profileImageUrl","setProfileImageUrl","fetchUserPosts","response","fetch","method","credentials","ok","posts","json","console","error","fetchUserProfileImage","handleLogout","handleNicknameChange","log","headers","body","JSON","stringify","data","text","toggleDropdown","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","ref","type","value","onChange","e","placeholder","map","post","title","content","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Real_GongGamHae_Frontend-Joonsik/Real_GongGamHae_Frontend-Joonsik/my-app/src/pages/MyPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/Auth/AuthContext'; // useAuth 가져오기\nimport Header from '../components/common/Header';           // header 가져오기\n\nimport '../css/MyPage.css';\n\nconst MyPage = () => {\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);    // 닉네임 옆의 연필버튼의 드롭다운 on off 버튼\n    const dropdownRef = useRef(null);                               // 찾아봐야함\n    const navigate = useNavigate();\n    const { isLogin, userId, nickname, logout, setNickname } = useAuth(); // useAuth로부터 필요한 값 가져오기\n    const [newNickname, setNewNickname] = useState(''); // 새 닉네임 입력 상태 추가\n    const [userPosts, setUserPosts] = useState([]); // State to store user's posts\n    const [profileImageUrl, setProfileImageUrl] = useState(''); // 프로필 이미지 URL 상태 추가\n\n    const fetchUserPosts = async () => {\n        try {\n            const response = await fetch(`http://localhost:8080/api/users/me/posts`, {\n                method: 'GET',\n                credentials: 'include'\n            });\n\n            if (response.ok) {\n                const posts = await response.json();\n                setUserPosts(posts);\n            } else {\n                console.error('Failed to fetch user posts');\n            }\n        } catch (error) {\n            console.error('Error fetching user posts:', error);\n        }\n    };\n\n    // 유저 프로필 사진 불러오기\n    const fetchUserProfileImage = async () => {\n        try {\n            const response = await fetch(`http://localhost:8080/api/users/me`, {\n                method: 'GET',\n                credentials: 'include'\n            });\n    \n            if (response.ok) {\n                const { profileImageUrl } = await response.json();\n                setProfileImageUrl(profileImageUrl);\n            } else {\n                console.error('Failed to fetch profile image');\n            }\n        } catch (error) {\n            console.error('Error fetching profile image:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchUserPosts();\n        fetchUserProfileImage(); // 프로필 이미지를 가져오는 함수 호출\n    }, []);\n\n    // 로그아웃 버튼을 누를 시\n    const handleLogout = () => {\n        try {\n            // AuthContext에서 logout() 함\n            logout();\n        } catch (error) {\n            console.error('Error logging out:', error);\n        }\n        navigate('/');\n    };\n\n    // 드롭다운 내에서 이름을 바꿀 시 변경될 코드\n    const handleNicknameChange = async () => {\n        console.log(userId, nickname, newNickname)\n        try {\n            // 서버로 새 닉네임을 업데이트하는 요청을 보냄\n            const response = await fetch(`http://localhost:8080/api/users/me/nickname`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ nickname:newNickname }),  // 수정: 새로운 닉네임과 사용자 ID를 보냄\n                credentials: 'include' // 쿠키를 포함하여 요청\n\n            });\n\n            console.log(response.ok)\n            \n            if (response.ok) {\n                // 응답이 성공적으로 받아졌다면\n                const data = await response.text();\n                console.log(data);\n                // 새로운 닉네임을 설정합니다.\n                setNickname(newNickname);\n                setNewNickname('');\n                setIsDropdownOpen(false);\n            } else {\n                console.error('Failed to update nickname on the server');\n            }\n        } catch (error) {\n            console.error('Error updating nickname:', error);\n        }\n    };\n    \n\n    // 드롭다운 Open Close 코드\n    const toggleDropdown = () => {\n        setIsDropdownOpen(!isDropdownOpen);             \n    };\n\n    // 외부 클릭시 드롭다운 Close 코드\n    const handleClickOutside = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n            setIsDropdownOpen(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n    \n    return (\n        <div className=\"mypage-container\">\n            <Header />\n            <h2>내 정보</h2>\n            {isLogin && (\n                <div className=\"user-info\">\n                    {profileImageUrl ? (\n                        <img src={profileImageUrl} alt=\"Profile\" className=\"profile-image\" />\n                    ) : (\n                        <p>Loading profile image...</p>\n                    )} {/* 프로필 이미지 추가 */}\n                    <div className=\"user-details\">\n                        <div className=\"nickname-container\">\n                            <p className=\"nickname\">\n                                닉네임: {nickname}&nbsp;&nbsp;\n                                <button onClick={toggleDropdown} className=\"edit-button\">✏️</button>\n                            </p>\n                            {isDropdownOpen && (\n                                <div ref={dropdownRef} className=\"dropdown-content\">\n                                    <input\n                                        type=\"text\"\n                                        value={newNickname}\n                                        onChange={(e) => setNewNickname(e.target.value)}\n                                        placeholder=\"새 닉네임\"\n                                    />\n                                    <button onClick={handleNicknameChange}>닉네임 변경</button>\n                                </div>\n                            )}\n                        </div>\n                        <p className=\"user-id\">아이디: {userId}</p>\n                    </div>\n                </div>\n            )}\n\n\n            <h2>내가 쓴 글</h2>\n            <ul className=\"posts-list\">\n                {userPosts.map(post => (\n                    <li key={post.id}>\n                        {post.title}\n                        <p>{post.content}</p>\n                    </li>\n                ))}\n            </ul>\n\n            <button className=\"logout-button\" onClick={handleLogout}>로그아웃</button>\n        </div>\n    );\n};\n\nexport default MyPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}