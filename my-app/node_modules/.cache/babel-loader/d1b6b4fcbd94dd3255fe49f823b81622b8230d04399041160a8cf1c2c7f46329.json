{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/common/Header';\nimport { useAuth } from '../components/Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\nconst MainPage = () => {\n  _s();\n  const {\n    isLogin,\n    userCategory,\n    updateCategory\n  } = useAuth(); // useAuth에서 받아온 userCategory 및 업데이트 함수 사용\n  const [selectedCategory, setSelectedCategory] = useState('자유게시판');\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [categoryEndpoint, setCategoryEndpoint] = useState('jayuposts');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let endpoint = '';\n        if (selectedCategory === '자유게시판') {\n          endpoint = 'jayuposts';\n        } else if (selectedCategory === '공감게시판') {\n          endpoint = 'gonggamposts';\n        } else if (selectedCategory === 'BEST게시판') {\n          endpoint = 'bestposts';\n        }\n        const response = await fetch(`http://localhost:8080/api/${endpoint}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        setPosts(data);\n        setLoading(false);\n        setCategoryEndpoint(endpoint);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n    updateCategory(selectedCategory); // 카테고리 업데이트 함수 호출\n  }, [selectedCategory, updateCategory]);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategoryChange(category),\n        style: {\n          margin: '0 10px',\n          fontWeight: selectedCategory === category ? 'bold' : 'normal'\n        },\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/PostWritePage\",\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/api/${categoryEndpoint}/${post.id}?category=${selectedCategory}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"VAPFzEh6Bg2+lOVagMjG/ZXPxrU=\", false, function () {\n  return [useAuth];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","Header","useAuth","jsxDEV","_jsxDEV","categories","MainPage","_s","isLogin","userCategory","updateCategory","selectedCategory","setSelectedCategory","posts","setPosts","loading","setLoading","categoryEndpoint","setCategoryEndpoint","fetchPosts","endpoint","response","fetch","ok","Error","data","json","error","console","handleCategoryChange","category","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","map","onClick","margin","fontWeight","to","length","post","id","title","content","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/common/Header';\r\nimport { useAuth } from '../components/Auth/AuthContext';\r\n\r\nconst categories = ['자유게시판', '공감게시판', 'BEST게시판'];\r\n\r\nconst MainPage = () => {\r\n    const { isLogin, userCategory, updateCategory } = useAuth(); // useAuth에서 받아온 userCategory 및 업데이트 함수 사용\r\n    const [selectedCategory, setSelectedCategory] = useState('자유게시판');\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [categoryEndpoint, setCategoryEndpoint] = useState('jayuposts');\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                let endpoint = '';\r\n                if (selectedCategory === '자유게시판') {\r\n                    endpoint = 'jayuposts';\r\n                } else if (selectedCategory === '공감게시판') {\r\n                    endpoint = 'gonggamposts';\r\n                } else if (selectedCategory === 'BEST게시판') {\r\n                    endpoint = 'bestposts';\r\n                }\r\n\r\n                const response = await fetch(`http://localhost:8080/api/${endpoint}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                setPosts(data);\r\n                setLoading(false);\r\n                setCategoryEndpoint(endpoint);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n        updateCategory(selectedCategory); // 카테고리 업데이트 함수 호출\r\n    }, [selectedCategory, updateCategory]);\r\n\r\n    const handleCategoryChange = (category) => {\r\n        setSelectedCategory(category);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <h1>메인 페이지</h1>\r\n            <div style={{ marginBottom: '20px' }}>\r\n                {categories.map((category) => (\r\n                    <button\r\n                        key={category}\r\n                        onClick={() => handleCategoryChange(category)}\r\n                        style={{\r\n                            margin: '0 10px',\r\n                            fontWeight: selectedCategory === category ? 'bold' : 'normal',\r\n                        }}\r\n                    >\r\n                        {category}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {isLogin && <Link to=\"/PostWritePage\">글쓰기</Link>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : posts.length === 0 ? (\r\n                <p>No posts found for selected category</p>\r\n            ) : (\r\n                <ul>\r\n                    {posts.map((post) => (\r\n                        <li key={post.id}>\r\n                            {/* Link를 사용하여 PostPage로 이동할 때 선택된 category 정보를 함께 전달 */}\r\n                            <Link to={`/api/${categoryEndpoint}/${post.id}?category=${selectedCategory}`}>\r\n                                <h2>{post.title}</h2>\r\n                                <p>{post.content}</p>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,OAAO,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAe,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACjE,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,WAAW,CAAC;EAErEC,SAAS,CAAC,MAAM;IACZ,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,IAAIC,QAAQ,GAAG,EAAE;QACjB,IAAIT,gBAAgB,KAAK,OAAO,EAAE;UAC9BS,QAAQ,GAAG,WAAW;QAC1B,CAAC,MAAM,IAAIT,gBAAgB,KAAK,OAAO,EAAE;UACrCS,QAAQ,GAAG,cAAc;QAC7B,CAAC,MAAM,IAAIT,gBAAgB,KAAK,SAAS,EAAE;UACvCS,QAAQ,GAAG,WAAW;QAC1B;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BF,QAAS,EAAC,CAAC;QACrE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAACW,IAAI,CAAC;QACdT,UAAU,CAAC,KAAK,CAAC;QACjBE,mBAAmB,CAACE,QAAQ,CAAC;MACjC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDR,UAAU,CAAC,CAAC;IACZT,cAAc,CAACC,gBAAgB,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACA,gBAAgB,EAAED,cAAc,CAAC,CAAC;EAEtC,MAAMmB,oBAAoB,GAAIC,QAAQ,IAAK;IACvClB,mBAAmB,CAACkB,QAAQ,CAAC;EACjC,CAAC;EAED,oBACI1B,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACH,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/B,OAAA;MAAA2B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf/B,OAAA;MAAKgC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,EAChC1B,UAAU,CAACiC,GAAG,CAAER,QAAQ,iBACrB1B,OAAA;QAEImC,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAACC,QAAQ,CAAE;QAC9CM,KAAK,EAAE;UACHI,MAAM,EAAE,QAAQ;UAChBC,UAAU,EAAE9B,gBAAgB,KAAKmB,QAAQ,GAAG,MAAM,GAAG;QACzD,CAAE;QAAAC,QAAA,EAEDD;MAAQ,GAPJA,QAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQT,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACL3B,OAAO,iBAAIJ,OAAA,CAACJ,IAAI;MAAC0C,EAAE,EAAC,gBAAgB;MAAAX,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC/CpB,OAAO,gBACJX,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACjBtB,KAAK,CAAC8B,MAAM,KAAK,CAAC,gBAClBvC,OAAA;MAAA2B,QAAA,EAAG;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE3C/B,OAAA;MAAA2B,QAAA,EACKlB,KAAK,CAACyB,GAAG,CAAEM,IAAI,iBACZxC,OAAA;QAAA2B,QAAA,eAEI3B,OAAA,CAACJ,IAAI;UAAC0C,EAAE,EAAG,QAAOzB,gBAAiB,IAAG2B,IAAI,CAACC,EAAG,aAAYlC,gBAAiB,EAAE;UAAAoB,QAAA,gBACzE3B,OAAA;YAAA2B,QAAA,EAAKa,IAAI,CAACE;UAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB/B,OAAA;YAAA2B,QAAA,EAAIa,IAAI,CAACG;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC,GALFS,IAAI,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA9EID,QAAQ;EAAA,QACwCJ,OAAO;AAAA;AAAA8C,EAAA,GADvD1C,QAAQ;AAgFd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}