{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// 상단 게시판 카테고리 모음\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['자유게시판', '공감게시판', '찐게시판'];\nconst MainPage = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('전체');\n  const [posts, setPosts] = useState([]);\n\n  // 각 게시판에 대한 예시 데이터\n  // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.    \n  useEffect(() => {\n    const examplePosts = {\n      '자유게시판': [{\n        id: 1,\n        category: '자유게시판',\n        title: '첫 번째 자유게시판 게시물',\n        content: '첫 번째 게시물 내용입니다.'\n      }, {\n        id: 2,\n        category: '자유게시판',\n        title: '두 번째 자유게시판 게시물',\n        content: '두 번째 게시물 내용입니다.'\n      }, {\n        id: 3,\n        category: '자유게시판',\n        title: '세 번째 자유게시판 게시물',\n        content: '세 번째 게시물 내용입니다.'\n      }],\n      '공감게시판': [{\n        id: 4,\n        category: '공감게시판',\n        title: '첫 번째 공감게시판 게시물',\n        content: '첫 번째 게시물 내용입니다.'\n      }, {\n        id: 5,\n        category: '공감게시판',\n        title: '두 번째 공감게시판 게시물',\n        content: '두 번째 게시물 내용입니다.'\n      }, {\n        id: 6,\n        category: '공감게시판',\n        title: '세 번째 공감게시판 게시물',\n        content: '세 번째 게시물 내용입니다.'\n      }, {\n        id: 7,\n        category: '공감게시판',\n        title: '네 번째 공감게시판 게시물',\n        content: '네 번째 게시물 내용입니다.'\n      }, {\n        id: 8,\n        category: '공감게시판',\n        title: '다섯 번째 공감게시판 게시물',\n        content: '다섯 번째 게시물 내용입니다.'\n      }],\n      'HOT게시판': [{\n        id: 9,\n        category: 'HOT게시판',\n        title: '첫 번째 HOT게시판 게시물',\n        content: '첫 번째 게시물 내용입니다.'\n      }, {\n        id: 10,\n        category: 'HOT게시판',\n        title: '두 번째 HOT게시판 게시물',\n        content: '두 번째 게시물 내용입니다.'\n      }, {\n        id: 11,\n        category: 'HOT게시판',\n        title: '세 번째 HOT게시판 게시물',\n        content: '세 번째 게시물 내용입니다.'\n      }, {\n        id: 12,\n        category: 'HOT게시판',\n        title: '네 번째 HOT게시판 게시물',\n        content: '네 번째 게시물 내용입니다.'\n      }, {\n        id: 13,\n        category: 'HOT게시판',\n        title: '다섯 번째 HOT게시판 게시물',\n        content: '다섯 번째 게시물 내용입니다.'\n      }, {\n        id: 14,\n        category: 'HOT게시판',\n        title: '여섯 번째 HOT게시판 게시물',\n        content: '여섯 번째 게시물 내용입니다.'\n      }, {\n        id: 15,\n        category: 'HOT게시판',\n        title: '일곱 번째 HOT게시판 게시물',\n        content: '일곱 번째 게시물 내용입니다.'\n      }, {\n        id: 16,\n        category: 'HOT게시판',\n        title: '여덟 번째 HOT게시판 게시물',\n        content: '여덟 번째 게시물 내용입니다.'\n      }]\n    };\n    setPosts(examplePosts);\n  }, []);\n\n  /* 실제 호출에 쓸 코드\r\n  useEffect(() => {\r\n  // API를 호출하여 자유게시판의 게시글 데이터를 가져옵니다.\r\n  const fetchPosts = async () => {\r\n    try {\r\n      // 예시 데이터 대신에 실제 API 호출을 수행해야 합니다.\r\n      const response = await fetch('API_ENDPOINT_HERE');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n      const data = await response.json();\r\n      setPosts(data); // API에서 받은 데이터를 상태에 설정합니다.\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n    fetchPosts(); // fetchPosts 함수를 호출하여 데이터를 가져옵니다.\r\n  }, []);\r\n  */\n\n  // 다른 카테고리를 누를 때마다 리스트를 변경시켜줄 코드\n  const filteredPosts = selectedCategory === '전체' ? posts : posts.filter(post => post.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCategory(category),\n        style: {\n          margin: '0 10px'\n        },\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"D7HYVUTevrq3szEJIkXhW0620II=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","categories","MainPage","_s","selectedCategory","setSelectedCategory","posts","setPosts","examplePosts","id","category","title","content","filteredPosts","filter","post","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","map","onClick","margin","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\n// 상단 게시판 카테고리 모음\r\nconst categories = ['자유게시판', '공감게시판', '찐게시판'];\r\n\r\nconst MainPage = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState('전체');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    // 각 게시판에 대한 예시 데이터\r\n    // 예시 데이터를 사용하여 게시물 목록을 설정합니다.\r\n    // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.    \r\n    useEffect(() => {\r\n        const examplePosts = {\r\n            '자유게시판': [\r\n              { id: 1, category: '자유게시판', title: '첫 번째 자유게시판 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n              { id: 2, category: '자유게시판', title: '두 번째 자유게시판 게시물', content: '두 번째 게시물 내용입니다.' },\r\n              { id: 3, category: '자유게시판', title: '세 번째 자유게시판 게시물', content: '세 번째 게시물 내용입니다.' }\r\n            ],\r\n            '공감게시판': [\r\n              { id: 4, category: '공감게시판', title: '첫 번째 공감게시판 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n              { id: 5, category: '공감게시판', title: '두 번째 공감게시판 게시물', content: '두 번째 게시물 내용입니다.' },\r\n              { id: 6, category: '공감게시판', title: '세 번째 공감게시판 게시물', content: '세 번째 게시물 내용입니다.' },\r\n              { id: 7, category: '공감게시판', title: '네 번째 공감게시판 게시물', content: '네 번째 게시물 내용입니다.' },\r\n              { id: 8, category: '공감게시판', title: '다섯 번째 공감게시판 게시물', content: '다섯 번째 게시물 내용입니다.' }\r\n            ],\r\n            'HOT게시판': [\r\n              { id: 9, category: 'HOT게시판', title: '첫 번째 HOT게시판 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n              { id: 10, category: 'HOT게시판', title: '두 번째 HOT게시판 게시물', content: '두 번째 게시물 내용입니다.' },\r\n              { id: 11, category: 'HOT게시판', title: '세 번째 HOT게시판 게시물', content: '세 번째 게시물 내용입니다.' },\r\n              { id: 12, category: 'HOT게시판', title: '네 번째 HOT게시판 게시물', content: '네 번째 게시물 내용입니다.' },\r\n              { id: 13, category: 'HOT게시판', title: '다섯 번째 HOT게시판 게시물', content: '다섯 번째 게시물 내용입니다.' },\r\n              { id: 14, category: 'HOT게시판', title: '여섯 번째 HOT게시판 게시물', content: '여섯 번째 게시물 내용입니다.' },\r\n              { id: 15, category: 'HOT게시판', title: '일곱 번째 HOT게시판 게시물', content: '일곱 번째 게시물 내용입니다.' },\r\n              { id: 16, category: 'HOT게시판', title: '여덟 번째 HOT게시판 게시물', content: '여덟 번째 게시물 내용입니다.' }\r\n            ]\r\n        };\r\n    setPosts(examplePosts);\r\n    }, []);\r\n\r\n\r\n    /* 실제 호출에 쓸 코드\r\n    useEffect(() => {\r\n    // API를 호출하여 자유게시판의 게시글 데이터를 가져옵니다.\r\n    const fetchPosts = async () => {\r\n      try {\r\n        // 예시 데이터 대신에 실제 API 호출을 수행해야 합니다.\r\n        const response = await fetch('API_ENDPOINT_HERE');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch posts');\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data); // API에서 받은 데이터를 상태에 설정합니다.\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts(); // fetchPosts 함수를 호출하여 데이터를 가져옵니다.\r\n    }, []);\r\n    */\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // 다른 카테고리를 누를 때마다 리스트를 변경시켜줄 코드\r\n    const filteredPosts = selectedCategory === '전체' \r\n        ? posts \r\n        : posts.filter(post => post.category === selectedCategory);\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n        <h1>메인 페이지</h1>\r\n        <div style={{ marginBottom: '20px' }}>\r\n            {categories.map(category => (\r\n            <button \r\n                key={category} \r\n                onClick={() => setSelectedCategory(category)}\r\n                style={{ margin: '0 10px' }}\r\n            >\r\n                {category}\r\n            </button>\r\n            ))}\r\n        </div>\r\n        <ul>\r\n            {filteredPosts.map(post => (\r\n            <li key={post.id}>\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAGlD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMU,YAAY,GAAG;MACjB,OAAO,EAAE,CACP;QAAEC,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,CAClF;MACD,OAAO,EAAE,CACP;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACjF;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAmB,CAAC,CACpF;MACD,QAAQ,EAAE,CACR;QAAEH,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACnF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACpF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACpF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,OAAO,EAAE;MAAkB,CAAC,EACpF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAmB,CAAC,EACtF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAmB,CAAC,EACtF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAmB,CAAC,EACtF;QAAEH,EAAE,EAAE,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAmB,CAAC;IAE5F,CAAC;IACLL,QAAQ,CAACC,YAAY,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAGN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAQI;EACA,MAAMK,aAAa,GAAGT,gBAAgB,KAAK,IAAI,GACzCE,KAAK,GACLA,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,QAAQ,KAAKN,gBAAgB,CAAC;EAI9D,oBACIJ,OAAA;IAAAgB,QAAA,gBACAhB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,EAChCf,UAAU,CAACsB,GAAG,CAACb,QAAQ,iBACxBV,OAAA;QAEIwB,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACK,QAAQ,CAAE;QAC7CW,KAAK,EAAE;UAAEI,MAAM,EAAE;QAAS,CAAE;QAAAT,QAAA,EAE3BN;MAAQ,GAJJA,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EACKH,aAAa,CAACU,GAAG,CAACR,IAAI,iBACvBf,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,EAAKD,IAAI,CAACJ;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAgB,QAAA,EAAID,IAAI,CAACH;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhBL,IAAI,CAACN,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CA7FID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA+Fd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}