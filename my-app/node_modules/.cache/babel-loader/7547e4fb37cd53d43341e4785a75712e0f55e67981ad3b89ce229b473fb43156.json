{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\uBA4B\\uC0AC \\uD504\\uB85C\\uC81D\\uD2B8\\\\my-app\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\n  const post = {\n    1: {\n      title: '첫 번째 게시물',\n      content: '첫 번째 게시물 내용입니다.'\n    },\n    2: {\n      title: '두 번째 게시물',\n      content: '두 번째 게시물 내용입니다.'\n    },\n    3: {\n      title: '세 번째 게시물',\n      content: '세 번째 게시물 내용입니다.'\n    }\n  }[id];\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 댓글 관리를 위한 상태\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentContent, setEditCommentContent] = useState('');\n\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\n\n  //// 이거 댓글 id 부여하면 안됨, 일단 지금은 이대로 쓰는데 꼭 바꿔야 됨, 서버에서 게시글 테이블안에 댓글 컬럼을 받아와서 나열할거임\n  // 댓글 추가 핸들러\n  const handleAddComment = () => {\n    if (comment.trim() !== '') {\n      const newComment = {\n        id: comments.length + 1,\n        // 새로운 댓글에 고유한 id 부여\n        content: comment\n      };\n      setComments([...comments, newComment]);\n      setComment('');\n    }\n  };\n\n  // 댓글 수정 핸들러\n  const handleEditComment = id => {\n    const commentToEdit = comments.find(c => c.id === id);\n    if (commentToEdit) {\n      setEditCommentId(id);\n      setEditCommentContent(commentToEdit.content);\n    }\n  };\n\n  // 댓글 업데이트 핸들러\n  const handleUpdateComment = () => {\n    setComments(comments.map(c => c.id === editCommentId ? {\n      ...c,\n      content: editCommentContent\n    } : c));\n    setEditCommentId(null);\n    setEditCommentContent('');\n  };\n\n  // 댓글 삭제 핸들러 (선택 사항)\n  const handleDeleteComment = id => {\n    setComments(comments.filter(c => c.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: editCommentId === c.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editCommentContent,\n              onChange: e => setEditCommentContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateComment,\n              children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [c.content, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditComment(c.id),\n              children: \"\\uC218\\uC815\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(c.id),\n              children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"+1viQwMxy+ajkEGLfh7iqGvrbqw=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","id","post","title","content","children","fileName","_jsxFileName","lineNumber","columnNumber","comment","setComment","comments","setComments","editCommentId","setEditCommentId","editCommentContent","setEditCommentContent","handleAddComment","trim","newComment","length","handleEditComment","commentToEdit","find","c","handleUpdateComment","map","handleDeleteComment","filter","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/멋사 프로젝트/my-app/src/pages/PostPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n\r\n  // 예시 데이터를 사용하여 게시물 정보를 설정합니다.\r\n  // 실제 애플리케이션에서는 API 호출을 통해 데이터를 가져와야 합니다.\r\n  const post = {\r\n    1: { title: '첫 번째 게시물', content: '첫 번째 게시물 내용입니다.' },\r\n    2: { title: '두 번째 게시물', content: '두 번째 게시물 내용입니다.' },\r\n    3: { title: '세 번째 게시물', content: '세 번째 게시물 내용입니다.' },\r\n  }[id];\r\n\r\n  if (!post) {\r\n    return <div>게시물을 찾을 수 없습니다.</div>;\r\n  }\r\n  \r\n  // 댓글 관리를 위한 상태\r\n  const [comment, setComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [editCommentId, setEditCommentId] = useState(null);\r\n  const [editCommentContent, setEditCommentContent] = useState('');\r\n\r\n\r\n\r\n  // 서버와 통신해서 이미 있는 코드를 불러오고 댓글 추가해서 서버 SQL 댓글 테이블에 올릴 코드\r\n\r\n\r\n\r\n\r\n  //// 이거 댓글 id 부여하면 안됨, 일단 지금은 이대로 쓰는데 꼭 바꿔야 됨, 서버에서 게시글 테이블안에 댓글 컬럼을 받아와서 나열할거임\r\n  // 댓글 추가 핸들러\r\n  const handleAddComment = () => {\r\n    if (comment.trim() !== '') {\r\n      const newComment = {\r\n        id: comments.length + 1, // 새로운 댓글에 고유한 id 부여\r\n        content: comment\r\n      };\r\n      setComments([...comments, newComment]);\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  // 댓글 수정 핸들러\r\n  const handleEditComment = (id) => {\r\n    const commentToEdit = comments.find((c) => c.id === id);\r\n    if (commentToEdit) {\r\n      setEditCommentId(id);\r\n      setEditCommentContent(commentToEdit.content);\r\n    }\r\n  };\r\n\r\n  // 댓글 업데이트 핸들러\r\n  const handleUpdateComment = () => {\r\n    setComments(\r\n      comments.map((c) =>\r\n        c.id === editCommentId ? { ...c, content: editCommentContent } : c\r\n      )\r\n    );\r\n    setEditCommentId(null);\r\n    setEditCommentContent('');\r\n  };\r\n\r\n  // 댓글 삭제 핸들러 (선택 사항)\r\n  const handleDeleteComment = (id) => {\r\n    setComments(comments.filter((c) => c.id !== id));\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n\r\n      <div>\r\n        <h2>댓글</h2>\r\n        <textarea\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요\"\r\n        ></textarea>\r\n        <button onClick={handleAddComment}>댓글 추가</button>\r\n        <ul>\r\n          {comments.map((c) => (\r\n            <li key={c.id}>\r\n              {editCommentId === c.id ? (\r\n                <div>\r\n                  <textarea\r\n                    value={editCommentContent}\r\n                    onChange={(e) => setEditCommentContent(e.target.value)}\r\n                  ></textarea>\r\n                  <button onClick={handleUpdateComment}>수정 완료</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {c.content}\r\n                  <button onClick={() => handleEditComment(c.id)}>수정하기</button>\r\n                  <button onClick={() => handleDeleteComment(c.id)}>삭제하기</button>\r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}